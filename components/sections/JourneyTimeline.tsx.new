'use client';

import { useState, useRef, useEffect } from 'react';
import React from 'react';
import Image from 'next/image';
import { motion, AnimatePresence } from 'framer-motion';
import { FiCalendar, FiBriefcase, FiAward, FiArrowUpRight, FiUser, FiX, FiChevronRight, 
         FiCode, FiBookOpen, FiClipboard, FiServer, FiStar, FiHash, FiMapPin, FiLink, FiClock } from 'react-icons/fi';

interface TimelineItem {
  id: string;
  year: string;
  title: string;
  subtitle: string;
  location: string;
  description: string;
  achievements: string[];
  technologies: string[];
  icon: React.ElementType;
  type: string;
  color: string;
  logo?: string; // Optional logo URL for organizations
}

const timelineData: TimelineItem[] = [
  {
    id: 'about',
    year: '2002 - Present',
    title: 'Sunday Moses',
    subtitle: 'About Me',
    location: 'Philippines & Kenya',
    description: 'Currently pursuing a BS in Computer Science at the University of the Philippines Los Baños, I have gained solid industry exposure through multiple roles in both startup and enterprise settings. My internship experiences and professional work as a software developer have enabled me to lead and contribute to various full-stack projects spanning system architecture, API design, UI development, and backend optimization. At companies like Ethos Bytes and BeFied, I\'ve built scalable web applications using modern technologies such as ReactJS, Node.js, Express, and Python, while also applying SQL and MongoDB for efficient data management. These roles have sharpened my technical judgment, improved my project management capabilities, and strengthened my ability to work within cross-functional teams using agile methodologies.',
    achievements: [
      'Beyond the code, I\'ve consistently taken initiative whether managing project timelines, mentoring peers, or driving frontend improvements for performance and accessibility',
      'My ability to adapt quickly to new technologies and contribute across the stack reflects my commitment to continuous learning and innovation',
      'Active involvement in tech organizations where I bring practical experience and a collaborative mindset',
      'Mentored junior developers and contributed to open-source projects in web development communities'
    ],
    technologies: ['ReactJS', 'Node.js', 'Express', 'Python', 'MongoDB', 'SQL', 'TypeScript', 'REST APIs', 'Agile'],
    icon: FiUser,
    type: 'about',
    color: 'primary'
  },
  {
    id: 'pngIntern',
    year: 'May 2025 - October 2025',
    title: 'Software Engineer Intern',
    subtitle: 'P&G',
    location: 'BGC, Taguig, Philippines',
    logo: '/images/logos/pg-logo.png',
    description: 'Currently serving as a Software Engineering Intern at Procter & Gamble\'s Global Business Center, contributing to enterprise-level applications and digital transformation initiatives.',
    achievements: [
      'Working with cross-functional teams to develop and enhance digital solutions',
      'Applying modern development practices in an enterprise setting',
      'Learning industry-standard software engineering processes and methodologies'
    ],
    technologies: ['Enterprise Software', 'Full-stack Development', 'Cloud Infrastructure', 'Agile Methodology'],
    icon: FiBriefcase,
    type: 'work',
    color: 'primary'
  },
  {
    id: 'befiedFullstack',
    year: 'May 2025 - July 2025',
    title: 'Full-stack Developer',
    subtitle: 'BeFied',
    location: 'Remote',
    logo: '/images/logos/befied-logo.png',
    description: 'Promoted to Full-stack Developer role after demonstrating proficiency in both frontend and backend development. Expanded responsibilities to include API design, database management, and system architecture.',
    achievements: [
      'Successfully transitioned from frontend-focused to full-stack development',
      'Implemented new backend features and integrated them with existing frontend components',
      'Collaborated with the design team to ensure seamless user experiences across the platform'
    ],
    technologies: ['React', 'Node.js', 'Express', 'MongoDB', 'RESTful APIs', 'Redux'],
    icon: FiBriefcase,
    type: 'work',
    color: 'secondary'
  },
  {
    id: 'ethosbytes',
    year: 'December 2024 - April 2025',
    title: 'Software Engineer Intern',
    subtitle: 'Ethos Bytes Pty Ltd',
    location: 'Sydney, Australia',
    logo: '/images/logos/ethos-bytes-logo.png',
    description: 'Worked as a Software Engineering Intern at Ethos Bytes, contributing to the development of scalable web applications and gaining experience in the Australian tech industry.',
    achievements: [
      'Contributed to the development of client-facing web applications',
      'Collaborated with senior developers on feature implementation and bug fixes',
      'Participated in code reviews and agile development processes'
    ],
    technologies: ['JavaScript', 'React', 'TypeScript', 'AWS', 'CI/CD', 'Git'],
    icon: FiBriefcase,
    type: 'work',
    color: 'accent'
  },
  {
    id: 'befiedFrontend',
    year: 'December 2024 - May 2025',
    title: 'Frontend Web Developer',
    subtitle: 'BeFied',
    location: 'Remote',
    logo: '/images/logos/befied-logo.png',
    description: 'Started as a Frontend Web Developer at BeFied, focusing on creating responsive and user-friendly interfaces for the company\'s web platform.',
    achievements: [
      'Developed and maintained frontend components using React and TypeScript',
      'Implemented responsive design principles for cross-device compatibility',
      'Collaborated with designers to translate UI/UX wireframes into functional code'
    ],
    technologies: ['React', 'TypeScript', 'CSS3', 'HTML5', 'UI/UX', 'Responsive Design'],
    icon: FiBriefcase,
    type: 'work',
    color: 'blue'
  },
  {
    id: 'yses',
    year: 'Sep 2024 - Present',
    title: 'Finance Committee Member',
    subtitle: 'Young Software Engineers\' Society',
    location: 'University of the Philippines Los Baños',
    logo: '/images/logos/yses-logo.png',
    description: 'As part of YSES, an academic organization committed to advancing Software Engineering within Computer Science, I\'ve had the privilege to contribute to initiatives that bridge academic theory with real-world tech practice.',
    achievements: [
      'Actively involved in financial planning and budget management to support events, training sessions, and community-led programs focused on software development and career readiness',
      'Collaborated with fellow committee members to ensure responsible fund allocation for organizational initiatives that promote technical upskilling, innovation, and peer mentorship',
      'Engaged in leadership and development opportunities that expanded my understanding of the software engineering landscape while building strong professional connections with peers and industry mentors'
    ],
    technologies: ['Financial Planning', 'Event Management', 'Leadership', 'Community Building'],
    icon: FiStar,
    type: 'achievement',
    color: 'green'
  },
  {
    id: 'fwdp',
    year: 'Oct 2024 - Present',
    title: 'Web Development Mentor',
    subtitle: 'Filipino Web Development Peers',
    location: 'Philippines',
    logo: '/images/logos/fwdp-logo.png',
    description: 'Being part of FWDP has played a vital role in advancing my career as a full-stack developer. The community\'s inclusive and collaborative environment has helped me grow both technically and professionally.',
    achievements: [
      'Enhanced technical expertise through peer mentoring, filWebDev Talks, and active community engagement particularly in modern stacks like React.js, Node.js, MongoDB, and RESTful APIs',
      'Strengthened soft skills such as public speaking, collaboration, and knowledge-sharing by participating in Monthly Community Days and contributing to open dialogue',
      'Grew within a supportive, values-driven ecosystem that champions innovation, diversity, and Filipino excellence in global tech'
    ],
    technologies: ['Mentorship', 'Community Engagement', 'Knowledge Sharing', 'React.js', 'Node.js'],
    icon: FiCode,
    type: 'achievement',
    color: 'blue'
  },
  {
    id: 'certifications',
    year: '2023 - 2025',
    title: 'Professional Certifications',
    subtitle: 'Meta, IBM, Harvard',
    location: 'Online',
    logo: '/images/logos/certification-logos.png',
    description: 'Completed several professional certifications from leading technology companies and educational institutions to enhance my skills and knowledge in software development.',
    achievements: [
      'Meta Frontend Developer Professional Certificate',
      'Meta Backend Developer Professional Certificate',
      'IBM Full Stack Developer Professional Certificate',
      'Harvard CS50: Introduction to Computer Science'
    ],
    technologies: ['Frontend Development', 'Backend Development', 'Full Stack Development', 'Computer Science Fundamentals'],
    icon: FiAward,
    type: 'education',
    color: 'purple'
  },
  {
    id: 'degree',
    year: '2022 - Present',
    title: 'BS Computer Science',
    subtitle: 'University of the Philippines Los Baños',
    location: 'Los Baños, Philippines',
    logo: '/images/logos/uplb-logo.png',
    description: 'Currently pursuing a Bachelor of Science in Computer Science at the University of the Philippines Los Baños, focusing on software engineering, data structures, and algorithm design.',
    achievements: [
      'Active member of computing organizations on campus',
      'Participating in programming competitions and hackathons',
      'Maintaining academic excellence while gaining practical industry experience'
    ],
    technologies: ['Data Structures', 'Algorithms', 'Software Engineering', 'Database Systems', 'Computer Networks'],
    icon: FiBookOpen,
    type: 'education',
    color: 'primary'
  },
  {
    id: 'iot',
    year: '2024',
    title: 'The Internet of Things Training',
    subtitle: 'Strathmore University',
    location: 'Nairobi, Kenya',
    logo: '/images/logos/strathmore-logo.png',
    description: 'Completed an intensive IoT training program at Strathmore University in partnership with Motorola Solutions. I gained hands-on experience in building IoT solutions and had the opportunity to participate in a hackathon.',
    achievements: [
      'Developed prototype IoT solutions for real-world problems',
      'Participated in a team-based hackathon focused on IoT innovations',
      'Gained practical knowledge of IoT hardware and software integration'
    ],
    technologies: ['IoT', 'C++', 'JavaScript', 'Embedded Systems', 'Sensor Technologies'],
    icon: FiAward,
    type: 'education',
    color: 'secondary'
  }
];

interface TypeIconProps {
  type: string;
}

const TypeIcon = ({ type }: TypeIconProps) => {
  const getIconBackground = () => {
    switch (type) {
      case 'work':
        return 'bg-blue-500/20';
      case 'education':
        return 'bg-green-500/20';
      case 'achievement':
        return 'bg-purple-500/20';
      case 'about':
        return 'bg-primary/20';
      default:
        return 'bg-gray-500/20';
    }
  };

  const getIconColor = () => {
    switch (type) {
      case 'work':
        return 'text-blue-500';
      case 'education':
        return 'text-green-500';
      case 'achievement':
        return 'text-purple-500';
      case 'about':
        return 'text-primary';
      default:
        return 'text-gray-500';
    }
  };

  const getIcon = () => {
    switch (type) {
      case 'work':
        return <FiBriefcase className="w-6 h-6" />;
      case 'education':
        return <FiAward className="w-6 h-6" />;
      case 'achievement':
        return <FiChevronRight className="w-6 h-6" />;
      case 'about':
        return <FiUser className="w-6 h-6" />;
      default:
        return <FiCalendar className="w-6 h-6" />;
    }
  };

  return (
    <div className={`p-3 rounded-full ${getIconBackground()} ${getIconColor()}`}>
      {getIcon()}
    </div>
  );
};

interface TimelineCardProps {
  item: TimelineItem;
  index: number;
  onClick: () => void;
}

interface TimelineModalProps {
  item: TimelineItem | null;
  isOpen: boolean;
  onClose: () => void;
}

const TimelineCard = ({ item, index, onClick }: TimelineCardProps) => {
  // Determine if this card should be on the left or right side
  const isEven = index % 2 === 0;
  
  return (
    <div className={`flex w-full items-center justify-center ${isEven ? 'flex-row' : 'flex-row-reverse'}`}>
      {/* Content */}
      <div className={`w-5/12`}>
        <motion.div
          whileHover={{ 
            y: -5, 
            scale: 1.02, 
            boxShadow: '0 10px 30px rgba(15, 23, 42, 0.3), inset 0 1px 1px rgba(255, 255, 255, 0.1)',
            borderColor: 'rgba(56, 189, 248, 0.3)'
          }}
          initial={{ opacity: 0, x: isEven ? -20 : 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ duration: 0.6, delay: index * 0.1 }}
          className={`relative cursor-pointer p-6 rounded-xl transition-all duration-300
            backdrop-blur-sm border hover:border-primary/50
            hover:shadow-lg hover:shadow-primary/10
            ${isEven ? 'mr-auto text-left' : 'ml-auto text-right'}`}
          style={{
            background: 'linear-gradient(to bottom right, rgba(30, 41, 59, 0.7), rgba(15, 23, 42, 0.8))',
            borderImage: 'linear-gradient(to bottom right, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05)) 1',
            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.07)'
          }}
          onClick={onClick}
        >
          {/* Top badge for type */}
          <div className={`absolute -top-3 ${isEven ? 'left-5' : 'right-5'} rounded-full px-3 py-1 text-xs font-bold`} 
            style={{
              background: item.type === 'work' ? 'rgba(59, 130, 246, 0.2)' : 
                       item.type === 'education' ? 'rgba(16, 185, 129, 0.2)' : 
                       'rgba(139, 92, 246, 0.2)',
              color: item.type === 'work' ? '#3b82f6' : 
                   item.type === 'education' ? '#10b981' : 
                   '#8b5cf6'
            }}
          >
            {item.type.charAt(0).toUpperCase() + item.type.slice(1)}
          </div>
          
          {/* Year badge */}
          <div className={`absolute -top-3 ${isEven ? 'right-5' : 'left-5'} bg-primary/90 text-white text-xs font-bold py-1 px-3 rounded-full shadow-md`}>
            {item.year}
          </div>
          
          {/* Duration badge */}
          <div className={`absolute -bottom-3 ${isEven ? 'right-5' : 'left-5'} bg-dark-100/90 border border-primary/20 text-primary/90 text-xs font-medium py-1 px-3 rounded-full shadow-sm`}>
            {item.year.includes('-') 
              ? `${Math.abs(parseInt(item.year.split('-')[1].trim() === 'Present' 
                ? new Date().getFullYear().toString() 
                : item.year.split('-')[1].trim()) - 
                parseInt(item.year.split('-')[0].trim()))} year${item.year.includes('Present') ? '+' : ''}`
              : '1 year'}
          </div>
          
          <div className="mt-6">
            {/* Title with icon and logo */}
            <div className={`flex items-center mb-2 ${!isEven && 'flex-row-reverse'}`}>
              <div className={`flex items-center ${!isEven && 'flex-row-reverse'}`}>
                <div className={`${isEven ? 'mr-2' : 'ml-2'}`}>
                  <TypeIcon type={item.type} />
                </div>
                {item.logo && (
                  <div className={`w-6 h-6 bg-white/5 rounded-md p-0.5 flex items-center justify-center ${isEven ? 'ml-1' : 'mr-1'} border border-white/10`}>
                    <img 
                      src={item.logo} 
                      alt={`${item.subtitle} logo`}
                      className="max-w-full max-h-full object-contain"
                    />
                  </div>
                )}
              </div>
              <div className={`${isEven ? 'ml-2' : 'mr-2'}`}>
                <h3 className="font-bold text-base text-white">
                  {item.title || item.subtitle}
                </h3>
                {item.title && <p className="text-gray-400 text-xs font-normal mt-0.5">{item.subtitle}</p>}
              </div>
            </div>
            
            {/* Location and Time on a single horizontal line */}
            <div className={`flex items-center mt-3 text-sm text-gray-400 ${!isEven && 'flex-row-reverse justify-end'} ${isEven ? 'space-x-4' : 'space-x-reverse space-x-4'}`}>
              <div className="flex items-center">
                <FiMapPin className={`${isEven ? 'mr-1' : 'ml-1 order-2'}`} />
                <span>{item.location}</span>
              </div>
              <span className="mx-2">•</span>
              <div className="flex items-center">
                <FiClock className={`${isEven ? 'mr-1' : 'ml-1 order-2'}`} />
                <span>
                  {item.year.includes('-') ? `${Math.abs(
                    parseInt(item.year.split('-')[1].trim() === 'Present' 
                      ? new Date().getFullYear().toString() 
                      : item.year.split('-')[1].trim()) - 
                    parseInt(item.year.split('-')[0].trim())
                  )} yr${item.year.includes('Present') ? '+' : ''}` : '1 yr'}
                </span>
              </div>
            </div>
            
            {/* Description preview */}
            <p className="text-gray-400 text-sm mt-3 line-clamp-2">
              {item.description.substring(0, 80)}...
            </p>
            
            <div className="mt-4 flex items-center justify-between">
              {/* Experience fields tags in a single line with overflow hidden */}
              <div className={`flex gap-2 overflow-x-hidden ${!isEven && 'flex-row-reverse'}`}>
                <div className={`flex gap-2 ${!isEven ? 'flex-row-reverse' : ''}`}>
                  {item.technologies.slice(0, 2).map((tech, i) => (
                    <span 
                      key={i} 
                      className="px-2 py-0.5 text-xs bg-dark-300/60 text-primary/80 rounded-md border border-primary/10 whitespace-nowrap hover:bg-primary/20 hover:text-primary transition-all"
                    >
                      {tech}
                    </span>
                  ))}
                  {item.technologies.length > 2 && (
                    <span className="px-2 py-0.5 text-xs bg-dark-300/60 text-gray-400 rounded-md border border-white/5 whitespace-nowrap">
                      +{item.technologies.length - 2}
                    </span>
                  )}
                </div>
              </div>
              
              {/* View More button */}
              <div className={`flex ${!isEven && 'justify-end'}`}>
                <motion.button
                  whileHover={{ x: isEven ? 5 : -5 }}
                  whileTap={{ scale: 0.97 }}
                  className="text-sm md:text-xs flex items-center font-medium text-gray-400 hover:text-white hover:bg-primary/20 py-1 px-2 md:py-0.5 md:px-1.5 rounded-md transition-all duration-300"
                >
                  {!isEven && <FiArrowUpRight className="mr-1 rotate-180" />}
                  View More
                  {isEven && <FiArrowUpRight className="ml-1" />}
                </motion.button>
              </div>
            </div>
          </div>
        </motion.div>
      </div>
      
      {/* Center timeline dot */}
      <div className="w-2/12 flex justify-center relative">
        {/* Subtle animated particles along the line */}
        <div className="absolute h-full w-6 overflow-hidden">
          <div className="timeline-particle" style={{ animationDelay: `${index * 0.2}s` }}></div>
          <div className="timeline-particle" style={{ animationDelay: `${index * 0.2 + 1.5}s` }}></div>
        </div>
        
        {/* Node with consistent styling and pulsing animation */}
        <motion.div
          whileHover={{ 
            scale: 1.2, 
            rotate: [0, 5, -5, 0],
            transition: { 
              type: "spring", 
              stiffness: 300, 
              damping: 10 
            }
          }}
          className="w-12 h-12 rounded-full bg-dark-200 border-2 border-white/50 shadow-md z-20 flex items-center justify-center relative"
          style={{ boxShadow: '0 0 10px rgba(255, 255, 255, 0.2)' }}
        >
          {/* Pulsing effect around node */}
          <motion.div
            className="absolute w-full h-full rounded-full bg-white/10"
            initial={{ opacity: 0.5, scale: 1 }}
            animate={{ 
              opacity: [0.2, 0.5, 0.2],
              scale: [1, 1.2, 1],
            }}
            transition={{
              duration: 3,
              repeat: Infinity,
              ease: "easeInOut"
            }}
          />
          
          {/* Icon with more variety based on the type */}
          <div className={`w-9 h-9 rounded-full flex items-center justify-center z-10`} style={{
            background: `radial-gradient(circle at center, ${
              item.type === 'work' ? '#3b82f630' : 
              item.type === 'education' ? '#10b98130' :
              item.type === 'achievement' ? '#8b5cf630' : 
              '#0ea5e930'
            }, transparent 70%)`
          }}>
            <TypeIcon type={item.type} />
          </div>
        </motion.div>
      </div>
      
      {/* Empty space opposite to content */}
      <div className="w-5/12"></div>
    </div>
  );
};

const TimelineModal = ({ item, isOpen, onClose }: TimelineModalProps) => {
  const modalRef = useRef<HTMLDivElement>(null);
  
  // Close modal when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (modalRef.current && !modalRef.current.contains(event.target as Node)) {
        onClose();
      }
    };
    
    if (isOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    }
    
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isOpen, onClose]);
  
  if (!item) return null;
  
  return (
    <AnimatePresence>
      {isOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-sm">
          <motion.div
            ref={modalRef}
            initial={{ opacity: 0, scale: 0.9, y: 20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.9, y: 20 }}
            transition={{ type: "spring", stiffness: 300, damping: 25 }}
            className="relative w-full max-w-3xl max-h-[80vh] overflow-y-auto m-4 p-8 rounded-xl bg-gradient-to-br from-dark-100/95 to-dark-200/95 backdrop-blur-xl border border-white/10 shadow-2xl"
          >
            {/* Close button */}
            <motion.button 
              onClick={onClose} 
              className="absolute top-4 right-4 p-2 rounded-full bg-white/10 hover:bg-white/20 text-white transition-colors duration-200"
              whileHover={{ rotate: 90, scale: 1.1 }}
              whileTap={{ scale: 0.9 }}
            >
              <FiX className="w-5 h-5" />
            </motion.button>
            
            <div className="flex items-center mb-6">
              <div className="flex items-center">
                <div className={`p-3 rounded-full ${
                  item.type === 'work' ? 'bg-blue-500/20 text-blue-500' : 
                  item.type === 'education' ? 'bg-green-500/20 text-green-500' : 
                  'bg-purple-500/20 text-purple-500'
                }`}>
                  <TypeIcon type={item.type} />
                </div>
                {item.logo && (
                  <div className="ml-3 w-10 h-10 bg-white/5 rounded-lg p-1 flex items-center justify-center">
                    <img 
                      src={item.logo} 
                      alt={`${item.subtitle} logo`}
                      className="max-w-full max-h-full object-contain"
                    />
                  </div>
                )}
              </div>
              <div className="ml-4">
                <h3 className="text-2xl font-bold text-white">{item.title || item.subtitle}</h3>
                {item.title && <p className="text-gray-400 text-lg">{item.subtitle}</p>}
              </div>
            </div>
            
            <div className="flex items-center space-x-4 mb-6 text-sm text-gray-400">
              <div className="flex items-center">
                <FiCalendar className="mr-2" />
                <span>{item.year}</span>
              </div>
              <span>•</span>
              <span>{item.location}</span>
            </div>
            
            <p className="text-gray-300 mb-8 leading-relaxed">{item.description}</p>
            
            <div className="mb-8">
              <h4 className="text-xl font-semibold mb-4 bg-gradient-to-r from-primary to-blue-400 bg-clip-text text-transparent">
                Key Achievements:
              </h4>
              <ul className="space-y-3">
                {item.achievements.map((achievement: string, i: number) => (
                  <motion.li
                    key={i}
                    initial={{ opacity: 0, x: -10 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ duration: 0.3, delay: i * 0.1 }}
                    className="flex items-start group"
                  >
                    <div className="p-1 mt-1 mr-3 rounded-full bg-primary/20 text-primary group-hover:bg-primary/40 transition-all duration-300">
                      <FiChevronRight className="w-3 h-3" />
                    </div>
                    <span className="text-white/80 group-hover:text-white transition-colors duration-300">{achievement}</span>
                  </motion.li>
                ))}
              </ul>
            </div>
            
            {item.technologies.length > 0 && (
              <div>
                <h4 className="text-xl font-semibold mb-4 bg-gradient-to-r from-secondary to-rose-400 bg-clip-text text-transparent">
                  Technologies Used:
                </h4>
                <div className="flex flex-wrap gap-2">
                  {item.technologies.map((tech: string, i: number) => (
                    <motion.span
                      key={i}
                      initial={{ opacity: 0, scale: 0.9 }}
                      animate={{ opacity: 1, scale: 1 }}
                      whileHover={{ scale: 1.05 }}
                      transition={{ duration: 0.3, delay: i * 0.05 }}
                      className="px-4 py-2 rounded-full bg-primary/10 text-primary border border-primary/20 text-sm hover:bg-primary/20 hover:shadow-md transition-all duration-300"
                    >
                      {tech}
                    </motion.span>
                  ))}
                </div>
              </div>
            )}
          </motion.div>
        </div>
      )}
    </AnimatePresence>
  );
};

const JourneyTimeline = () => {
  const [selectedItem, setSelectedItem] = useState<TimelineItem | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  
  const handleOpenModal = (item: TimelineItem) => {
    setSelectedItem(item);
    setIsModalOpen(true);
  };
  
  const handleCloseModal = () => {
    setIsModalOpen(false);
  };
  
  return (
    <section id="journey" className="py-20 md:py-32 relative">
      {/* Background gradients */}
      <div className="absolute inset-0 opacity-30 overflow-hidden">
        <div className="absolute -top-[300px] -left-[300px] w-[600px] h-[600px] bg-gradient-to-br from-primary/20 to-transparent rounded-full filter blur-[80px]"></div>
        <div className="absolute -bottom-[300px] -right-[300px] w-[600px] h-[600px] bg-gradient-to-br from-secondary/20 to-transparent rounded-full filter blur-[80px]"></div>
      </div>
      
      <div className="container mx-auto px-6 relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="section-title">Journey Timeline</h2>
          <p className="text-gray-300 max-w-3xl mx-auto text-lg">
            My professional journey through education, work experience, and achievements.
            Click on any milestone to explore detailed information.
          </p>
        </motion.div>
        
        {/* Vertical timeline with alternating items */}
        <div className="relative max-w-5xl mx-auto">
          {/* Main continuous timeline line that connects all nodes - keeping the white effect */}
          <div className="absolute left-1/2 top-0 bottom-0 w-[3px] md:w-[2px] lg:w-[1px] xl:w-[1px] bg-white/40 transform -translate-x-1/2 z-10" 
               style={{ boxShadow: '0 0 10px rgba(255, 255, 255, 0.3)', height: 'calc(100% + 80px)' }}></div>
          <div className="absolute left-1/2 top-0 bottom-0 w-[1px] bg-white/80 transform -translate-x-1/2 z-10" 
               style={{ boxShadow: '0 0 5px rgba(255, 255, 255, 0.5)', height: 'calc(100% + 80px)' }}></div>
          
          {/* Timeline items */}
          <div className="relative space-y-16 md:space-y-20 lg:space-y-24 xl:space-y-28">
            {timelineData.map((item, index) => (
              <TimelineCard
                key={item.id}
                item={item}
                index={index}
                onClick={() => handleOpenModal(item)}
              />
            ))}
            
            {/* Final timeline dot at the bottom with consistent styling */}
            <div className="flex justify-center mt-12 relative">
              {/* Final node with white effect and pulsing animation */}
              <motion.div 
                className="w-10 h-10 rounded-full bg-dark-200 border-2 border-white/50 flex items-center justify-center relative z-20"
                style={{ boxShadow: '0 0 10px rgba(255, 255, 255, 0.2)' }}
                whileHover={{ scale: 1.2 }}
              >
                <motion.div
                  className="absolute w-full h-full rounded-full bg-white/5"
                  animate={{ 
                    opacity: [0.1, 0.3, 0.1],
                    scale: [1, 1.3, 1],
                  }}
                  transition={{
                    duration: 3,
                    repeat: Infinity,
                    ease: "easeInOut"
                  }}
                />
                <div className="w-3 h-3 rounded-full bg-white/80 z-10" />
              </motion.div>
            </div>
          </div>
        </div>
      </div>
      
      {/* Modal for detailed view */}
      <TimelineModal
        item={selectedItem}
        isOpen={isModalOpen}
        onClose={handleCloseModal}
      />
    </section>
  );
};

export default JourneyTimeline;
